name: Deploy Shinil PMS

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: shinil_pms
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: vue-project/package-lock.json
    
    - name: Install dependencies
      run: |
        cd vue-project
        npm ci
    
    - name: Run tests
      run: |
        cd vue-project
        npm test --if-present

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push Docker images
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/shinil-pms-frontend:latest ./vue-project
        docker build -t ${{ secrets.DOCKER_USERNAME }}/shinil-pms-api:latest -f ./vue-project/Dockerfile.api ./vue-project
        docker push ${{ secrets.DOCKER_USERNAME }}/shinil-pms-frontend:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/shinil-pms-api:latest

  deploy-to-server:
    needs: deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          # 서버에서 실행할 배포 스크립트
          cd /opt/shinil-pms
          docker-compose pull
          docker-compose up -d
          docker system prune -f 